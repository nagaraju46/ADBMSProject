{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Amo Jobs\\\\Decentralized Ethereum\\\\dapp\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport TxList from \"./TxList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [depositValue, setDepositValue] = useState(0);\n  const [greet, setGreet] = useState('');\n  const [greetingValue, setGreetingValue] = useState();\n  const [balance, setBalance] = useState();\n  const [error, setError] = useState();\n  const [txs, setTxs] = useState([]);\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const contractAddress = '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266';\n  const ABI = [{\n    \"inputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"_greeting\",\n      \"type\": \"string\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"deposit\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"greet\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"_greeting\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"setGreeting\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }];\n  const contract = new ethers.Contract(contractAddress, ABI, signer);\n  useEffect(() => {\n    const requestAccounts = async () => {\n      await provider.send(\"eth_requestAccounts\", []);\n    };\n\n    const getGreeting = async () => {\n      const greeting = await contract.greet();\n      setGreet(greeting);\n    };\n\n    const getBalance = async () => {\n      const balance = await provider.getBalance(contractAddress);\n      setBalance(ethers.utils.formatEther(balance));\n    };\n\n    requestAccounts().catch(console.error);\n    getBalance().catch(console.error);\n    getGreeting().catch(console.error);\n  }, []);\n\n  const handleDepositChange = e => {\n    setDepositValue(e.target.value);\n  };\n\n  const handleGreetingChange = e => {\n    setGreetingValue(e.target.value);\n  };\n\n  const handleDepositSubmit = async e => {\n    e.preventDefault();\n    const ethValue = ethers.utils.parseEther(depositValue);\n    const deposit = await contract.deposit({\n      value: ethValue\n    });\n    await deposit.wait();\n    const balance = await provider.getBalance(contractAddress);\n    setBalance(ethers.utils.formatEther(balance));\n  };\n\n  const handleGreetingSubmit = async e => {\n    e.preventDefault();\n    await contract.setGreeting(greetingValue);\n    setGreet(greetingValue);\n    setGreetingValue('');\n  };\n\n  const startPayment = async _ref => {\n    let {\n      setError,\n      setTxs,\n      ether,\n      addr\n    } = _ref;\n\n    try {\n      if (!window.ethereum) throw new Error(\"No crypto wallet found. Please install it.\");\n      await window.ethereum.send(\"eth_requestAccounts\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      ethers.utils.getAddress(addr);\n      const tx = await signer.sendTransaction({\n        to: addr,\n        value: ethers.utils.parseEther(ether)\n      });\n      console.log({\n        ether,\n        addr\n      });\n      console.log(\"tx\", tx);\n      setTxs([tx]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSendSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    setError();\n    await startPayment({\n      setError,\n      setTxs,\n      ether: data.get(\"ether\"),\n      addr: data.get(\"addr\")\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Greetings\", greet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contract Balance: \", balance, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Deposit ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"m-4\",\n            onSubmit: handleDepositSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"form-control\",\n                placeholder: \"0\",\n                onChange: handleDepositChange,\n                value: depositValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                variant: \"secondary\",\n                size: \"lg\",\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Deposit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-3\",\n            children: \"Change Greeting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"m-4\",\n            onSubmit: handleGreetingSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"\",\n                onChange: handleGreetingChange,\n                value: greetingValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                variant: \"secondary\",\n                size: \"lg\",\n                type: \"submit\",\n                className: \"btn btn-dark\",\n                children: \"Change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-3\",\n            children: \"SEND ETH PAYMENT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"m-4\",\n            onSubmit: handleSendSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"addr\",\n                className: \"form-control\",\n                placeholder: \"Recipient Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"ether\",\n                className: \"form-control\",\n                placeholder: \"Amount in ETH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                variant: \"secondary\",\n                size: \"lg\",\n                type: \"submit\",\n                className: \"btn btn-dark btn-primary\",\n                children: \"Pay Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                message: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TxList, {\n                txs: txs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DcwlaCFsWXqlpR4yQrHlncEqoeY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/Amo Jobs/Decentralized Ethereum/dapp/client/src/App.js"],"names":["React","useEffect","useState","ethers","ErrorMessage","TxList","App","depositValue","setDepositValue","greet","setGreet","greetingValue","setGreetingValue","balance","setBalance","error","setError","txs","setTxs","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contractAddress","ABI","contract","Contract","requestAccounts","send","getGreeting","greeting","getBalance","utils","formatEther","catch","console","handleDepositChange","e","target","value","handleGreetingChange","handleDepositSubmit","preventDefault","ethValue","parseEther","deposit","wait","handleGreetingSubmit","setGreeting","startPayment","ether","addr","Error","getAddress","tx","sendTransaction","to","log","err","message","handleSendSubmit","data","FormData","get"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport TxList from \"./TxList\";\r\n\r\nfunction App() {\r\n  const [depositValue, setDepositValue] = useState(0);\r\n  const [greet, setGreet] = useState('');\r\n  const [greetingValue, setGreetingValue] = useState();\r\n  const [balance, setBalance] = useState();\r\n  const [error, setError] = useState();\r\n  const [txs, setTxs] = useState([]);\r\n\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n  const signer = provider.getSigner()\r\n  const contractAddress = '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266';\r\n  const ABI = [\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_greeting\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"constructor\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"deposit\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"payable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"greet\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_greeting\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"setGreeting\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    }\r\n  ];\r\n  const contract = new ethers.Contract(contractAddress, ABI, signer);  \r\n\r\n  useEffect(() => {\r\n    const requestAccounts = async () => {\r\n      await provider.send(\"eth_requestAccounts\", []);\r\n    }\r\n    \r\n    const getGreeting = async () => {\r\n      const greeting = await contract.greet();\r\n      setGreet(greeting);\r\n    }\r\n\r\n    const getBalance = async () => {\r\n      const balance = await provider.getBalance(contractAddress);\r\n      setBalance(ethers.utils.formatEther(balance));\r\n    }\r\n\r\n    requestAccounts()\r\n      .catch(console.error)\r\n    getBalance()\r\n      .catch(console.error)\r\n    getGreeting()\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  const handleDepositChange = (e) => {\r\n    setDepositValue(e.target.value)\r\n  }\r\n\r\n  const handleGreetingChange = (e) => {\r\n    setGreetingValue(e.target.value);\r\n  }\r\n\r\n  const handleDepositSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const ethValue = ethers.utils.parseEther(depositValue)\r\n    const deposit = await contract.deposit({value: ethValue});\r\n    await deposit.wait();\r\n    const balance = await provider.getBalance(contractAddress);\r\n    setBalance(ethers.utils.formatEther(balance));\r\n  }\r\n\r\n  const handleGreetingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await contract.setGreeting(greetingValue)\r\n    setGreet(greetingValue);\r\n    setGreetingValue('');\r\n  }\r\n\r\n  const startPayment = async ({ setError, setTxs, ether, addr }) => {\r\n    try {\r\n      if (!window.ethereum)\r\n        throw new Error(\"No crypto wallet found. Please install it.\");\r\n  \r\n      await window.ethereum.send(\"eth_requestAccounts\");\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      ethers.utils.getAddress(addr);\r\n      const tx = await signer.sendTransaction({\r\n        to: addr,\r\n        value: ethers.utils.parseEther(ether)\r\n      });\r\n      console.log({ ether, addr });\r\n      console.log(\"tx\", tx);\r\n      setTxs([tx]);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n  \r\n  const handleSendSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    setError();\r\n    await startPayment({\r\n      setError,\r\n      setTxs,\r\n      ether: data.get(\"ether\"),\r\n      addr: data.get(\"addr\")\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-5\">\r\n\r\n        <div className=\"col\">\r\n          <h3>Greetings{greet}</h3>\r\n          <p>Contract Balance: {balance} ETH</p>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <div className=\"mb-3\">\r\n            <h4>Deposit ETH</h4>\r\n            <form className=\"m-4\" onSubmit={handleDepositSubmit}>\r\n              <div className=\"mb-3\">\r\n                <input type=\"number\" className=\"form-control\" placeholder=\"0\" onChange={handleDepositChange} value={depositValue} />\r\n              </div>\r\n              <div className=\"d-grid gap-2\">\r\n                <button variant=\"secondary\" size=\"lg\" type=\"submit\" className=\"btn btn-success\">Deposit</button>\r\n              </div>          \r\n            </form>\r\n\r\n            <h4 className=\"mt-3\">Change Greeting</h4>\r\n            <form className=\"m-4\" onSubmit={handleGreetingSubmit}>\r\n              <div className=\"mb-3\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" onChange={handleGreetingChange} value={greetingValue} />\r\n              </div>\r\n              <div className=\"d-grid gap-2\">\r\n                <button variant=\"secondary\" size=\"lg\" type=\"submit\" className=\"btn btn-dark\">Change</button>\r\n              </div>\r\n              \r\n            </form>\r\n\r\n            <h4 className=\"mt-3\">SEND ETH PAYMENT</h4>\r\n            <form className=\"m-4\" onSubmit={handleSendSubmit}>\r\n              <div className=\"mb-3\">\r\n                <input type=\"text\" name=\"addr\" className=\"form-control\" placeholder=\"Recipient Address\" />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <input type=\"text\" name=\"ether\" className=\"form-control\" placeholder=\"Amount in ETH\"/>\r\n              </div>\r\n              <div className=\"d-grid gap-2\">\r\n                <button variant=\"secondary\" size=\"lg\" type=\"submit\" className=\"btn btn-dark btn-primary\">Pay Now</button>\r\n                <ErrorMessage message={error} />\r\n                <TxList txs={txs} />  \r\n              </div>\r\n                    \r\n            </form>       \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}